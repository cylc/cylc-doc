.. _cylc-broadcast:

Cylc Broadcast
--------------

The ``cylc broadcast`` command overrides :cylc:conf:`[runtime]`
settings in a running workflow.

Broadcast can be used to communicate information to downstream tasks by
setting environment variables. Broadcasts can target all tasks, groups of
tasks, or specific tasks, at all cycle points or at specific cycle points.
See broadcast command help for details.

Broadcast settings targeted at a specific task ID or cycle point expire and
are forgotten as the workflow moves on. Un-targeted variables and those
targeted at a task name persist throughout the workflow run, even across
restarts, unless manually cleared using the broadcast command - and so
should be used sparingly.


.. _Sub-Workflows:

Sub-Workflows
-------------

A single Cylc workflow can have multiple cycling sequences in the graph,
but cycles can't be nested. If you need *cycles within cycles* - e.g. to
iterate over many files generated by each run of a cycling task - options are:

- Parameterize the sub-cycles

  - This is easy but it makes more tasks-per-cycle, which is the primary
    determinant of workflow size and scheduler efficiency (this has a much
    smaller impact on Cylc 8, however)

- Use a separate sub-workflow inside a main-workflow task, to run the sub-cycle
  tasks at each main-workflow cycle point

  - This is very efficient, but monitoring and run-directory housekeeping are
    be more complicated because it creates multiple workflows and run directories

Sub-workflows must be started with ``--no-detach`` so that the containing task
does not finish until the sub-workflow does, and they should be non-cycling
or have a ``final cycle point`` so they don't keep on running indefinitely.

Sub-workflow names should normally incorporate the main-workflow cycle point
so that successive sub-workflows can run concurrently if necessary and do not
compete for the same workflow run directory. This generates a new sub-workflow
run directory for every main-workflow cycle point, so you may need housekeeping
tasks to extract outputs from each sub-workflow run and tidy up its directories.
