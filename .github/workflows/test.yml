name: test

on:
  push:
    branches: [master]
  pull_request:
  workflow_dispatch:
      rose_ref:
        description: The Rose branch to test against
        required: false
      cylc_ref:
        description: The Cylc branch to test against
        required: false
      cylc_rose_ref:
        description: The Cylc branch to test against
        required: false

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: configure python
        uses: actions/setup-python@v2
        with:
          python-version: '3.7'

      - name: configure node
        uses: actions/setup-node@v1
        with:
            node-version: '10.x'

      - name: install graphviz
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            librsvg2-bin \
            ghostscript \
            graphviz \
            pkg-config \
            libgraphviz-dev
          pip install pygraphviz

      - name: checkout cylc-doc
        uses: actions/checkout@v2
      - name: install cylc-doc
        run: |
          # https://github.com/ImageMagick/ImageMagick/issues/374#issuecomment-279252866
          sudo apt-get install -y \
            librsvg2-bin \
            ghostscript \
            gsfonts \
            libfreetype6-dev \
            libfontconfig1-dev
          pip install .[all]

      - name: install libs to document
        env:
          cylc_ref: ${{ github.event.inputs.cylc_ref || 'master' }}
          rose_ref: ${{ github.event.inputs.rose_ref || 'master' }}
          cylc_rose_ref: ${{ github.event.inputs.cylc_rose_ref || 'master' }}
        run: |
          # NOTE: Install with [all] so we can import plugins which may
          #       have extra dependencies.
          pip install  \
            "cylc-flow[all] @ git+https://github.com/cylc/cylc-flow@${cylc_ref}" \
            "metomi-rose[all] @ git+https://github.com/metomi/rose@${rose_ref}" \
            "cylc-rose[all] @ git+https://github.com/cylc/cylc-rose@${cylc_rose_ref}"

      - name: install eslint
        run: |
          npm install -g eslint

      - name: lint
        run: |
          pycodestyle .
          eslint .

      - name: build
        run: |
          make html slides linkcheck doctest SPHINXOPTS='-Wn'

      - name: tutorial suite
        run: |
          mkdir -p "${HOME}/cylc-run"
          bin/run-validate

      - name: debug
        if: failure()
        run: |
          env
          cat /tmp/sphinx-err* || true  # sphinx traceback
          find ~/cylc-run -name job.err -exec cat {} +  # cylc error files
